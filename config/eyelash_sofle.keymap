#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    hrml: hrml {
        compatible = "zmk,behavior-hold-tap";
        label = "HRML";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <125>;
        flavor = "balanced";
        hold-trigger-on-release;
        hold-trigger-key-positions = <46 47 48 49 50 51 59 60 61 62 63 7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49>;
    };

    hmrr: hmrr {
        compatible = "zmk,behavior-hold-tap";
        label = "HMRR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <125>;
        flavor = "balanced";
        hold-trigger-on-release;
        hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 26 27 28 29 30 31 39 40 41 42 43 44 53 54 55 56 57>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        reset-left {
            bindings = <&sys_reset>;
            key-positions = <0 5>;
        };

        reset-right {
            bindings = <&sys_reset>;
            key-positions = <12 7>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp EQUAL       &kp N1         &kp N2            &kp N3            &kp N4              &kp N5          &mmv MOVE_UP     &kp N6  &kp N7              &kp N8            &kp N9            &kp N0                 &kp MINUS
&kp TAB         &kp Q          &kp W             &kp E             &kp R               &kp T           &mmv MOVE_DOWN   &kp Y   &kp U               &kp I             &kp O             &kp P                  &kp BSLH
&kp LEFT_SHIFT  &hrml LCTRL A  &hrml LEFT_ALT S  &hrml LEFT_GUI D  &hrml LEFT_SHIFT F  &kp G           &mmv MOVE_LEFT   &kp H   &hmrr LEFT_SHIFT J  &hmrr LEFT_GUI K  &hmrr LEFT_ALT L  &hmrr LCTRL SEMICOLON  &kp APOS
&mo 1           &kp Z          &kp X             &kp C             &kp V               &kp B           &mmv MOVE_RIGHT  &kp N   &kp M               &kp COMMA         &kp DOT           &kp FSLH               &to 3
&kp C_MUTE      &kp LCTRL      &kp LCTRL         &kp BACKSPACE     &kp SPACE           &kp LEFT_GUI    &mkp LCLK        &mo 2   &kp ENTER           &kp ESCAPE        &mo 1             &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5       &msc SCRL_UP     &rgb_ug RGB_SPI  &kp F7                &kp F8                 &kp F9     &kp F10           &kp F11
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4     &msc SCRL_DOWN   &rgb_ug RGB_SPD  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp HOME   &kp MINUS         &kp F12
&trans      &kp TILDE        &trans          &trans           &trans           &kp GRAVE    &msc SCRL_LEFT   &rgb_ug RGB_BRI  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &kp TILDE    &msc SCRL_RIGHT  &rgb_ug RGB_BRD  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans       &mkp LCLK        &trans           &trans                &trans                 &trans     &trans
            >;

            display-name = "LAYER1";
            sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6    &kp F7          &kp F8        &kp F9           &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &caps_word    &trans          &mmv MOVE_DOWN   &trans    &trans          &kp F11       &kp F12          &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans    &trans          &sys_reset    &soft_off        &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans    &trans          &trans        &trans           &trans
            >;

            display-name = "LAYER2";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "LAYER3";
            bindings = <
&kp EQUAL       &kp N1         &kp N2            &kp N3            &kp N4              &kp N5          &mmv MOVE_UP     &kp N6         &kp N7              &kp N8            &kp N9            &kp N0                 &kp MINUS
&kp TAB         &kp Q          &kp W             &kp E             &kp R               &kp T           &mmv MOVE_DOWN   &kp Y          &kp U               &kp I             &kp O             &kp P                  &kp BSLH
&kp LEFT_SHIFT  &hrml LCTRL A  &hrml LEFT_ALT S  &hrml LEFT_GUI D  &hrml LEFT_SHIFT F  &kp G           &mmv MOVE_LEFT   &kp H          &hmrr LEFT_SHIFT J  &hmrr LEFT_GUI K  &hmrr LEFT_ALT L  &hmrr LCTRL SEMICOLON  &kp APOS
&mo 4           &kp Z          &kp X             &kp C             &kp V               &kp B           &mmv MOVE_RIGHT  &kp N          &kp M               &kp COMMA         &kp DOT           &kp FSLH               &to 0
&kp C_MUTE      &kp LCTRL      &kp LCTRL         &kp BACKSPACE     &kp SPACE           &kp LEFT_ALT    &mkp LCLK        &kp RIGHT_GUI  &kp ENTER           &kp ESCAPE        &mo 1             &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        layer_4 {
            display-name = "LAYER4";
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5       &msc SCRL_UP     &rgb_ug RGB_SPI  &kp F7                &kp F8                 &kp F9     &kp F10           &kp F11
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4     &msc SCRL_DOWN   &rgb_ug RGB_SPD  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp HOME   &kp MINUS         &kp F12
&trans      &kp TILDE        &trans          &trans           &trans           &kp GRAVE    &msc SCRL_LEFT   &rgb_ug RGB_BRI  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &kp TILDE    &msc SCRL_RIGHT  &rgb_ug RGB_BRD  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans       &mkp LCLK        &trans           &trans                &trans                 &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
